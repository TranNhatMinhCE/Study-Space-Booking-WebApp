"""
Django settings for BE project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qoxw+b(4cs*-i#9u97wl5pgp9f0ws1wjg5nulbaww$--e1avz2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'drf_spectacular',
    'django_filters',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'django_celery_beat',
    'apps.resources',
    'apps.bookings',
    'apps.users',
    'apps.message',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware', 
]

ROOT_URLCONF = 'BE.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BE.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Ho_Chi_Minh'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'quynhsunsu5@gmail.com'
EMAIL_HOST_PASSWORD = 'tyuh dazq yont uinc'


# Cấu hình DRF
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),    
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',  # Sử dụng drf-spectacular làm schema mặc định
    # Các cài đặt DRF khác (nếu có, ví dụ: phân quyền, phân trang)
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Tùy chọn, nếu cần xác thực
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DATETIME_INPUT_FORMATS': [
        "%Y-%m-%dT%H:%M:%SZ",
        "%Y-%m-%dT%H:%M:%S%z",
    ],
}

# Cấu hình drf-spectacular
SPECTACULAR_SETTINGS = {
    'TITLE': 'Study Space Booking API',  # Tiêu đề của API
    'DESCRIPTION': 'API cho hệ thống đặt không gian học tập',  # Mô tả API
    'VERSION': '1.0.0',  # Phiên bản API
    'SERVE_INCLUDE_SCHEMA': True,  # Cho phép serve schema qua endpoint (cần kết hợp với urls.py)
    # Các tùy chọn khác (tùy chỉnh thêm nếu cần)
    'SCHEMA_PATH_PREFIX': '/api/',  # Đường dẫn tiền tố cho schema (phù hợp với cấu hình URL của bạn)
    'SWAGGER_UI_SETTINGS': {
        'docExpansion': 'none',  # Thu gọn tất cả các phần khi mở Swagger UI
        'persistAuthorization': True,  # Lưu thông tin xác thực
    },
    'SERVERS': [
        # {
        #     'url': '{protocol}://{host}',  # Dùng biến protocol và host
        #     'description': 'Dynamic Server',
        #     'variables': {
        #         'protocol': {
        #             'default': 'http',
        #             'enum': ['http', 'https'],
        #             'description': 'Giao thức của máy chủ'
        #         },
        #         'host': {
        #             'default': 'api.example.org',
        #             'description': 'Địa chỉ máy chủ'
        #         }
        #     }
        # },
        {
            'url': 'http://localhost:8000',
            'description': 'Local Development Server',
        },
    ],
}



#------------------------------Apps.User---------------------------------#
AUTH_USER_MODEL = 'users.User'

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60), # Thời gian sống của access token nên nhỏ
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}
#------------------------------------------------------------------------#

# Cấu hình Redis làm message broker
CELERY_BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Ho_Chi_Minh'

from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    'auto-update-booking-status-every-5-minutes': {
        'task': 'apps.bookings.services.auto_update_booking_status',
        'schedule': crontab(minute='*/5'),  # Chạy mỗi 5 phút
    },
        'send-checkin-reminder-every-minute': {
        'task': 'apps.bookings.services.send_checkin_reminder',
        'schedule': crontab(minute='*'),  # Chạy mỗi phút
    },
    'send-checkout-reminder-every-minute': {
        'task': 'apps.bookings.services.send_checkout_reminder',
        'schedule': crontab(minute='*'),  # Chạy mỗi phút
    },
}